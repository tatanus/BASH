#!/usr/bin/env bash
set -uo pipefail

# =============================================================================
# NAME        : run_msf_scripts.sh
# DESCRIPTION :
# AUTHOR      : Adam Compton
# DATE CREATED: 2024-12-09 13:49:51
# =============================================================================
# EDIT HISTORY:
# DATE                 | EDITED BY    | DESCRIPTION OF CHANGE
# ---------------------|--------------|----------------------------------------
# 2024-12-09 13:49:51  | Adam Compton | Initial creation.
# =============================================================================

# Define script categories
script_categories["run_msf_scripts"]="internal shares"

# Main function
function run_mfs_scripts() {
    # =============================================================================
    # Step 1: Validate environment variables
    # =============================================================================
    local env_vars=("NMAP_DIR" "DATA_DIR" "TEE_DIR")
    validate_envs "${env_vars[@]}" || return 1

    # =============================================================================
    # Step 2: Validate input files and output directories
    # =============================================================================
    local input_files=("")
    local output_dirs=("${DATA_DIR}")
    validate_input_output input_files output_dirs || return 1

    # =============================================================================
    # Step 3: Validate any needed tools exist
    # =============================================================================
    validate_tools "msfconsole" "grep" "sed" "cut"

    # =============================================================================
    # Step 4: Main logic
    # =============================================================================
    # Define the MSF directory
    MSF_DIR="${DATA_DIR}/MSF"

    # Check if the MSF directory exists
    check_dir_readable "${MSF_DIR}"

    info "Preparing to run Metasploit scripts from ${MSF_DIR}..."

    # Generate the list of MSF scripts dynamically
    msf_scripts=()
    while IFS= read -r script_file; do
        # Extract the port if available, or default to -1
        port=$(grep -Eo "set RHOSTS file:${NMAP_DIR}/[0-9]+\.txt" "${script_file}" | sed -E "s|.*${NMAP_DIR}/([0-9]+)\.txt|\1|")
        [[ -z "${port}" ]] && port="-1"

        # Get script name and check output status
        script_name=$(basename "${script_file}")
        output_file="${TEE_DIR}/MSF_${script_name%.rc}.tee"
        output_status="✖"
        [[ -f "${output_file}" ]] && output_status="✔"

        msf_scripts+=("${port}:${script_name}:${output_status}")
    done < <(find "${MSF_DIR}" -name "*.rc" | sort)

    info "Metasploit scripts found: ${#msf_scripts[@]}"

    # Run MSF script
    function run_script() {
        local port="$1"
        local script_name="$2"
        local original_script="${MSF_DIR}/${script_name}"

        info "Executing script ${script_name} on port ${port}..."

        # Determine the target file
        if [[ "${port}" != "-1" ]]; then
            targets_file="${NMAP_DIR}/${port}.txt"
            if [[ ! -s "${targets_file}" ]]; then
                warning "No targets found for port ${port}. Skipping ${script_name}."
                return
            fi
        fi

        # Create a temporary rc file with replaced paths
        local temp_script="/tmp/${script_name}.tmp"
        sed -e "s|/root/DATA/NMAP|${NMAP_DIR}|g" \
            -e "s|/root/DATA/TEE|${TEE_DIR}|g" \
            "${original_script}" > "${temp_script}"

        # Execute the temporary Metasploit script
        #    msfconsole -q -r "$temp_script" | tee -a "${TEE_DIR}/MSF_${script_name%.rc}.tee"
        msfconsole -q -r "${temp_script}"
        if [[ $? -ne 0 ]]; then
            warning "Execution failed for script ${script_name}."
        else
            pass "Script ${script_name} completed successfully."
        fi

        # Clean up the temporary file
        rm -f "${temp_script}"
    }

    # Display menu for script selection
    info "Displaying Metasploit script menu..."
    PS3="Select a script to run or choose 0 to exit: "
    select script in "${msf_scripts[@]}" "Exit"; do
        if [[ "${script}" == "Exit" || "${REPLY}" -eq 0 ]]; then
            info "Exiting Metasploit script execution."
            break
        elif [[ -n "${script}" ]]; then
            port=$(echo "${script}" | cut -d':' -f1)
            script_name=$(echo "${script}" | cut -d':' -f2)
            run_script "${port}" "${script_name}"
        else
            warning "Invalid selection. Please choose a valid script."
        fi
    done

    pass "Metasploit script execution completed."
}
