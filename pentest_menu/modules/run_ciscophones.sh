#!/usr/bin/env bash
set -uo pipefail

# =============================================================================
# NAME        : run_ciscophones.sh
# DESCRIPTION :
# AUTHOR      : Adam Compton
# DATE CREATED: 2024-12-09 13:49:51
# =============================================================================
# EDIT HISTORY:
# DATE                 | EDITED BY    | DESCRIPTION OF CHANGE
# ---------------------|--------------|----------------------------------------
# 2024-12-09 13:49:51  | Adam Compton | Initial creation.
# =============================================================================

# Define script categories
script_categories["run_ciscophones"]="external internal web"

# Main function
function run_ciscophones() {
    # =============================================================================
    # Step 1: Validate environment variables
    # =============================================================================
    local _env_vars
    _env_vars=("NMAP_DIR" "CISCO_DIR" "TOOLS_DIR")
    validate_envs "${_env_vars[@]}" || return 1

    # =============================================================================
    # Step 2: Validate input files and output directories
    # =============================================================================
    local _input_files _output_dirs
    _input_files=("${NMAP_DIR}/6970.txt" "${TOOLS_DIR}/aquatone/aquatone_urls.txt")
    _output_dirs=("${CREDS_DIR}")
    validate_input_output _input_files _output_dirs || return 1

    # =============================================================================
    # Step 3: Validate any needed tools exist
    # =============================================================================
    validate_tools "curl"

    # =============================================================================
    # Step 4: Main logic
    # =============================================================================
    # Define input files
    PORT_FILE="${NMAP_DIR}/6970.txt"
    AQUATONE_URLS_FILE="${TOOLS_DIR}/aquatone/aquatone_urls.txt"

    # Check for Cisco phone configuration files
    if [[ -f "${PORT_FILE}" ]]; then
        info "Retrieving Cisco phone config files from IPs in ${PORT_FILE}..."
        while IFS= read -r ip; do
            output_file="${CISCO_DIR}/PHONES/${ip}.ConfigFileList.txt"
            info "Downloading config file from ${ip}..."
            curl -s "http://${ip}/ConfigFileList.txt" >> "${output_file}"
            if [[ $? -ne 0 ]]; then
                warning "Failed to download config file from ${ip}."
            else
                pass "Config file saved to ${output_file}."
            fi
        done < "${PORT_FILE}"
    else
        warning "Port file (${PORT_FILE}) not found. Skipping Cisco phone config retrieval."
    fi

    # Check for network configuration files from Aquatone output
    if [[ -f "${AQUATONE_URLS_FILE}" ]]; then
        info "Retrieving NetworkConfiguration.txt from URLs in ${AQUATONE_URLS_FILE}..."
        while IFS= read -r url; do
            output_file="${CISCO_DIR}/PHONES/NetworkConfiguration.txt"
            info "Processing ${url}..."
            echo "${url}" >> "${output_file}"
            curl -s "${url}" >> "${output_file}"
            if [[ $? -ne 0 ]]; then
                warning "Failed to retrieve network configuration from ${url}."
            else
                pass "Network configuration saved to ${output_file}."
            fi
        done < "${AQUATONE_URLS_FILE}"
    else
        warning "Aquatone URLs file (${AQUATONE_URLS_FILE}) not found. Skipping network configuration retrieval."
    fi

    pass "Cisco phone configuration scans completed."
}
