#!/usr/bin/env bash
set -uo pipefail

# Source utility functions and config files from module.sh
source "${SCRIPT_DIR}/lib/module.sh"

# Ensure required environment variables are set
validate_env_vars "NMAP_DIR" "CISCO_DIR" "TOOLS_DIR"

# Define input files
PORT_FILE="${NMAP_DIR}/6970.txt"
AQUATONE_URLS_FILE="${TOOLS_DIR}/aquatone/aquatone_urls.txt"

# Check for Cisco phone configuration files
if [[ -f "${PORT_FILE}" ]]; then
    info "Retrieving Cisco phone config files from IPs in ${PORT_FILE}..."
    while IFS= read -r ip; do
        output_file="${CISCO_DIR}/PHONES/${ip}.ConfigFileList.txt"
        info "Downloading config file from ${ip}..."
        curl -s "http://${ip}/ConfigFileList.txt" >> "${output_file}"
        if [[ $? -ne 0 ]]; then
            warning "Failed to download config file from ${ip}."
        else
            success "Config file saved to ${output_file}."
        fi
    done < "${PORT_FILE}"
else
    warning "Port file (${PORT_FILE}) not found. Skipping Cisco phone config retrieval."
fi

# Check for network configuration files from Aquatone output
if [[ -f "${AQUATONE_URLS_FILE}" ]]; then
    info "Retrieving NetworkConfiguration.txt from URLs in ${AQUATONE_URLS_FILE}..."
    while IFS= read -r url; do
        output_file="${CISCO_DIR}/PHONES/NetworkConfiguration.txt"
        info "Processing ${url}..."
        echo "${url}" >> "${output_file}"
        curl -s "${url}" >> "${output_file}"
        if [[ $? -ne 0 ]]; then
            warning "Failed to retrieve network configuration from ${url}."
        else
            success "Network configuration saved to ${output_file}."
        fi
    done < "${AQUATONE_URLS_FILE}"
else
    warning "Aquatone URLs file (${AQUATONE_URLS_FILE}) not found. Skipping network configuration retrieval."
fi

success "Cisco phone configuration scans completed."
