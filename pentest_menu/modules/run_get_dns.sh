#!/usr/bin/env bash
set -uo pipefail

# Source utility functions and config files from module.sh
source "${SCRIPT_DIR}/lib/module.sh"

# Validate required environment variables
validate_env_vars "RECON_DIR" "DATA_DIR"

# Define the input and output files
TARGETS_FILE="${DATA_DIR}/targets.txt"
DNS_OUTPUT_FILE="${RECON_DIR}/NMAP_DNS"
DNS_LIST_FILE="${RECON_DIR}/DNS.txt"
MACHINE_NAME_FILE="${RECON_DIR}/MACHINE_NAME.txt"

# Validate the targets file
validate_file_exists "${TARGETS_FILE}"

# Run Nmap to list DNS records
info "Running Nmap to resolve DNS for targets in ${TARGETS_FILE}..."
nmap -sL -iL "${TARGETS_FILE}" -oA "${DNS_OUTPUT_FILE}"

if [[ $? -ne 0 ]]; then
    fail "Nmap failed to resolve DNS records. Check your targets file."
    exit 1
fi

# Extract DNS names from the Nmap output and save to the DNS list file
grep -v "()" "${DNS_OUTPUT_FILE}.gnmap" | grep "Host: " | grep -oP '\(\K[^)]+' > "${DNS_LIST_FILE}"
if [[ $? -ne 0 || ! -s "${DNS_LIST_FILE}" ]]; then
    fail "Failed to extract DNS records. No records found in ${DNS_OUTPUT_FILE}.gnmap."
    exit 1
fi
success "DNS records saved to ${DNS_LIST_FILE}."

# Extract DNS names without domain portions and save to the machine name file
info "Extracting machine names (DNS without domains)..."
awk -F. '{print $1}' "${DNS_LIST_FILE}" | sort -u > "${MACHINE_NAME_FILE}"
if [[ $? -ne 0 || ! -s "${MACHINE_NAME_FILE}" ]]; then
    fail "Failed to extract machine names. No valid machine names found."
    exit 1
fi
success "Machine names saved to ${MACHINE_NAME_FILE}."
