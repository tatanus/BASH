#!/usr/bin/env bash
set -uo pipefail

# =============================================================================
# NAME        : run_get_dns.sh
# DESCRIPTION :
# AUTHOR      : Adam Compton
# DATE CREATED: 2024-12-09 13:49:51
# =============================================================================
# EDIT HISTORY:
# DATE                 | EDITED BY    | DESCRIPTION OF CHANGE
# ---------------------|--------------|----------------------------------------
# 2024-12-09 13:49:51  | Adam Compton | Initial creation.
# =============================================================================

# Define script categories
script_categories["run_get_dns"]="external internal web"

# Main function
function run_get_dns() {
    # =============================================================================
    # Step 1: Validate environment variables
    # =============================================================================
    local _env_vars
    _env_vars=("DATA_DIR" "RECON_DIR")
    validate_envs "${_env_vars[@]}" || return 1

    # =============================================================================
    # Step 2: Validate input files and output directories
    # =============================================================================
    local _input_files
    local _output_dirs
    _input_files=("${DATA_DIR}/targets.txt")
    _output_dirs=("${RECON_DIR}")
    validate_input_output _input_files _output_dirs || return 1

    # =============================================================================
    # Step 3: Validate any needed tools exist
    # =============================================================================
    validate_tools "nmap" "grep" "sort" "awk"

    # =============================================================================
    # Step 4: Main logic
    # =============================================================================
    # Define the input and output files
    TARGETS_FILE="${DATA_DIR}/targets.txt"
    DNS_OUTPUT_FILE="${RECON_DIR}/NMAP_DNS"
    DNS_LIST_FILE="${RECON_DIR}/DNS.txt"
    MACHINE_NAME_FILE="${RECON_DIR}/MACHINE_NAME.txt"

    # Run Nmap to list DNS records
    info "Running Nmap to resolve DNS for targets in ${TARGETS_FILE}..."
    nmap -sL -iL "${TARGETS_FILE}" -oA "${DNS_OUTPUT_FILE}"

    if [[ $? -ne 0 ]]; then
        fail "Nmap failed to resolve DNS records. Check your targets file."
        return
    fi

    # Extract DNS names from the Nmap output and save to the DNS list file
    grep -v "()" "${DNS_OUTPUT_FILE}.gnmap" | grep "Host: " | grep -oP '\(\K[^)]+' > "${DNS_LIST_FILE}"
    if [[ $? -ne 0 || ! -s "${DNS_LIST_FILE}" ]]; then
        fail "Failed to extract DNS records. No records found in ${DNS_OUTPUT_FILE}.gnmap."
        return
    fi
    pass "DNS records saved to ${DNS_LIST_FILE}."

    # Extract DNS names without domain portions and save to the machine name file
    info "Extracting machine names (DNS without domains)..."
    awk -F. '{print $1}' "${DNS_LIST_FILE}" | sort -u > "${MACHINE_NAME_FILE}"
    if [[ $? -ne 0 || ! -s "${MACHINE_NAME_FILE}" ]]; then
        fail "Failed to extract machine names. No valid machine names found."
        return
    fi
    pass "Machine names saved to ${MACHINE_NAME_FILE}."
}
