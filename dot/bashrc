# ~/.bashrc: executed by bash(1) for non-login shells.
# If not running interactively, don't do anything
if [[ -z "${PS1:-}" ]]; then
    return
fi

PWD="${PWD:-}"
HOSTNAME="${HOSTNAME:-localhost}"
PS0="${PS0:-}"
PS1="${PS1:-}"
PS2="${PS2:-}"

# Check if we are running inside Ghostty terminal and fixing unbound variables
if [[ -n "${TERM_PROGRAM:-}" ]]; then
    case "${TERM_PROGRAM}" in
        "ghostty")
            GHOSTTY_RESOURCES_DIR="${GHOSTTY_RESOURCES_DIR:-}"
            GHOSTTY_BASH_INJECT="${GHOSTTY_BASH_INJECT:-}"
            GHOSTTY_BASH_ENV="${GHOSTTY_BASH_ENV:-}"
            GHOSTTY_BASH_RCFILE="${GHOSTTY_BASH_RCFILE:-$HOME/.bashrc}"
            GHOSTTY_SHELL_INTEGRATION_NO_SUDO="${GHOSTTY_SHELL_INTEGRATION_NO_SUDO:-0}"
            GHOSTTY_SHELL_INTEGRATION_NO_CURSOR="${GHOSTTY_SHELL_INTEGRATION_NO_CURSOR:-0}"
            GHOSTTY_SHELL_INTEGRATION_NO_TITLE="${GHOSTTY_SHELL_INTEGRATION_NO_TITLE:-0}"
            _ghostty_executing="${_ghostty_executing:-}"
            _ghostty_last_reported_cwd="${_ghostty_last_reported_cwd:-}"
            ;;
        "Apple_Terminal")
            ;;
        "iTerm.app")
            export USE_TMUX=false
            ;;
        "gnome-terminal")
            ;;
        "konsole")
            ;;
        "xfce4-terminal")
            ;;
        "alacritty")
            ;;
        "kitty")
            ;;
        "tilix")
            ;;
        "hyper")
            ;;
        "WarpTerminal")
            ;;
        "wezterm")
            ;;
        "xterm")
            ;;
        "screen")
            ;;
        "tmux")
            ;;
        *)
            [[ -n "${DEBUG_BASHRC}" ]] && echo "Unknown terminal: ${TERM_PROGRAM}"
            ;;
    esac
fi

# Set VIMRUNTIME and TERM variables
if [[ "$TERM" == "screen" || "$TERM" == "screen-256color" ]]; then
    export TERM=screen-256color
else
    export TERM=xterm-256color
fi

# Silence bash deprecation warning
export BASH_SILENCE_DEPRECATION_WARNING=1

# Check window size after each command and update LINES and COLUMNS if necessary
shopt -s checkwinsize

# Make less more friendly for non-text input files
if [[ -x /usr/bin/lesspipe ]]; then
    eval "$(SHELL=/bin/sh lesspipe)"
fi

# Set variable identifying the chroot you work in (used in the prompt below)
if [[ -z "${debian_chroot:-}" ]] && [[ -r /etc/debian_chroot ]]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# History settings
HISTFILE=~/.bash_history
HISTCONTROL=
HISTIGNORE=
HISTSIZE=100000
HISTFILESIZE=100000
HISTTIMEFORMAT="[%m/%d/%y %H:%M:%S] "
shopt -s histappend

# Check if the history file exists, if not, create it
if [[ ! -f ${HISTFILE} ]]; then
    touch "${HISTFILE}"
    chmod 600 "${HISTFILE}"
fi

primary_bash_files=(
    "${HOME}/.config/bash/bash.path.sh"
    "${HOME}/.config/bash/bash.env.sh"
    "${HOME}/.config/bash/path.env.sh"
)

# Source additional configurations
for file in "${primary_bash_files[@]}"; do
    [[ -f "${file}" ]] && source "${file}"
done

secondary_bash_files=(
    # Now that variables are set, load bash_path
    "${BASH_DIR}/bash.aliases.sh"
    "${BASH_DIR}/bash.prompt.sh"

    "${BASH_DIR}/screen.aliases.sh"
    "${BASH_DIR}/tmux.aliases.sh"

    "${BASH_DIR}/ssh.aliases.sh"

    # Scripts or extra configuration
    "${BASH_DIR}/bash.history.sh"

    #pentest environment if present
    "${BASH_DIR}/pentest.sh"
)

# Source additional configurations
for file in "${secondary_bash_files[@]}"; do
    [[ -f "${file}" ]] && source "${file}"
done

# Append history sync commands without overwriting existing PROMPT_COMMAND
history_sync="history -a; history -n; history -w"

if [[ "$PROMPT_COMMAND" != *"$history_sync"* ]]; then
    PROMPT_COMMAND="${PROMPT_COMMAND}; ${history_sync}"
fi