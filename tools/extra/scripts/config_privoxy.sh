#!/usr/bin/env bash

###############################################################################
# configure_privoxy.sh
# ==============================
# Parses SOCKS5 proxy settings from /etc/proxychains.conf and configures Privoxy.
# Also, it parses /root/DATA/targets.txt and /root/DATA/domains.txt to add
# local traffic exceptions.
#
# Usage:
#   ./configure_privoxy.sh
#
# Requirements:
#   - Privoxy installed
#   - ProxyChains installed and configured
#   - Valid /root/DATA/targets.txt and /root/DATA/domains.txt files
###############################################################################

# Privoxy config file path
PRIVOXY_CONFIG="/etc/privoxy/config"

# ProxyChains config file path
PROXYCHAINS_CONFIG="/etc/proxychains.conf"

# Target and domain files
TARGETS_FILE="/root/DATA/targets.txt"
DOMAINS_FILE="/root/DATA/domains.txt"

# Extract SOCKS5 proxy line from proxychains.conf
SOCKS5_PROXY=$(grep -E "^socks5[[:space:]]+[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+[[:space:]]+[0-9]+" "${PROXYCHAINS_CONFIG}" | head -n 1)

if [[ -z "${SOCKS5_PROXY}" ]]; then
    echo "Error: No SOCKS5 proxy found in ${PROXYCHAINS_CONFIG}"
    exit 1
fi

# Extract proxy host and port
PROXY_HOST=$(echo "${SOCKS5_PROXY}" | awk '{print $2}')
PROXY_PORT=$(echo "${SOCKS5_PROXY}" | awk '{print $3}')

# Backup existing Privoxy config
cp "${PRIVOXY_CONFIG}" "${PRIVOXY_CONFIG}.bak"

# Write new Privoxy config
echo "# Privoxy Configuration - Generated by configure_privoxy.sh" > "${PRIVOXY_CONFIG}"
echo "forward-socks5 / ${PROXY_HOST}:${PROXY_PORT} ." >> "${PRIVOXY_CONFIG}"

echo "# Bypass local traffic" >> "${PRIVOXY_CONFIG}"

# Process targets.txt for local exceptions
if [[ -f "${TARGETS_FILE}" ]]; then
    while read -r line; do
        [[ -z "${line}" || "${line}" =~ ^# ]] && continue  # Skip empty lines and comments
        echo "forward ${line}/ ." >> "${PRIVOXY_CONFIG}"
    done < "${TARGETS_FILE}"
else
    echo "Warning: ${TARGETS_FILE} not found. Skipping."
fi

# Process domains.txt for local exceptions
if [[ -f "${DOMAINS_FILE}" ]]; then
    while read -r domain; do
        [[ -z "${domain}" || "${domain}" =~ ^# ]] && continue  # Skip empty lines and comments
        echo "forward .${domain}/ ." >> "${PRIVOXY_CONFIG}"
    done < "${DOMAINS_FILE}"
else
    echo "Warning: ${DOMAINS_FILE} not found. Skipping."
fi

# Restart Privoxy
systemctl restart privoxy

echo "Privoxy configured successfully with SOCKS5 proxy ${PROXY_HOST}:${PROXY_PORT} and local bypass rules."

# # INSTALL PRIVOXY
# sudo apt update && sudo apt install -y privoxy
# # Start and Enable it
# sudo systemctl enable --now privoxy
# # Verify it is running
# sudo systemctl status privoxy

# # Restart privoxy after config changes
# sudo systemctl restart privoxy

# # Minimal privoxy/config file
# # ==============================
# # This config provides a clean base for dynamic updates.

# # Privoxy will listen only on localhost (default: 8888)
# listen-address 127.0.0.1:8888

# # Allow any application on localhost to use Privoxy as a proxy
# accept-intercepted-requests 1

# # Disable any built-in filtering or ad blocking (as it's not needed)
# disable-automatic-blocking 1
# enable-edit-actions 0

# # Logging - Disable unnecessary logging (set to "0" to enable)
# log-messages 0
# log-file /var/log/privoxy.log
# log-level 1

# # SOCKS5 Forwarding (Configured by configure_privoxy.sh)
# # Default placeholder, will be overwritten
# # forward-socks5 / 127.0.0.1:9050 .

# # Local Traffic Exceptions (Configured by configure_privoxy.sh)
# # forward 192.168.1.0/24 .
# # forward example.local .
